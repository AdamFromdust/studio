
import type {Metadata} from 'next';
import {Geist, Geist_Mono} from 'next/font/google';
import './globals.css';
import { getServerSession } from "next-auth/next"
import { authOptions } from "@/lib/auth";
import Link from 'next/link';
import { Button } from "@/components/ui/button"
import {signOut} from "next-auth/react";
import {SidebarProvider, Sidebar, SidebarContent, SidebarMenu, SidebarMenuItem, SidebarMenuButton} from '@/components/ui/sidebar';
import {Home, BookOpen, Leaf, Lightbulb, HelpCircle} from 'lucide-react';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Firebase Studio App',
  description: 'Generated by Firebase Studio',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);

  return (
    <SidebarProvider>
      <html lang="en" suppressHydrationWarning={true}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
      <Sidebar collapsible="icon">
        <SidebarContent>
          <SidebarMenu>
            <SidebarMenuItem>
              <SidebarMenuButton href="#" isActive>
                <Home />
                <span>Home</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
            <SidebarMenuItem>
              <SidebarMenuButton href="#knowledgebase">
                <BookOpen />
                <span>Knowledge Base</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
            <SidebarMenuItem>
              <SidebarMenuButton href="#plantprofile">
                <Leaf />
                <span>Plant Profile</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
            <SidebarMenuItem>
              <SidebarMenuButton href="#carelogging">
                <Lightbulb />
                <span>Care Logging</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
            <SidebarMenuItem>
              <SidebarMenuButton href="#airecommendations">
                <HelpCircle />
                <span>AI Recommendations</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
            <SidebarMenuItem>
              <SidebarMenuButton href="#aihelp">
                <HelpCircle />
                <span>AI Help</span>
              </SidebarMenuButton>
            </SidebarMenuItem>
          </SidebarMenu>
          {session ? (
              <>
                <span>Logged in as {session.user?.name}</span>
                <Button variant="outline" size="sm" onClick={() => signOut()}>
                  Logout
                </Button>
              </>
            ) : (
              <Link href="/login" className="text-sm underline">
                Login
              </Link>
            )}
        </SidebarContent>
      </Sidebar>

        {children}
        
      </body>
      </html>
    </SidebarProvider>
  );
}
